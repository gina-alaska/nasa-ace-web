- unless layer.ckan_id.nil?
  - metadata = parse_layer_api_metadata(layer)
- active ||= false
.layer.list-group-item{ class: active ? 'active': '', data: { name: layer.name, type: layer.maptype, layers: layer.params, url: layer.full_url, color: layer.style.try(:[], 'color') } }
  .layer-handle{ draggable: "true", data: { toggle: 'layer' } }
    &nbsp;

  .layer-controls{ data: { toggle: 'layer' } }
    %span.layer-label
      = overlay_icon(layer)
      %abbr{title:layer.name}= layer.name

  .layer-buttons.btn-group.btn-group-sm.hide-collapsed
    .btn.btn-default{ data: { toggle: 'collapse', target: dom_id(layer, '#info') }, title: layer.name }
      %i.fa.fa-gear
    .btn.btn-default{ data: { behavior: 'move-layer-down' } }
      %i.fa.fa-caret-down
    .btn.btn-default{ data: { behavior: 'move-layer-up' } }
      %i.fa.fa-caret-up


  .hide-collapsed.collapse{ id: dom_id(layer, 'info')  }
    .layer-settings
      .setting-group
        %label Opacity:
        %input{ name: 'opacity', type: 'range', min: 0, max: 100, step: 0, value: 100, data: { adjust: 'opacity', layer: layer.name } }
      .setting-group.text-center
        %button.btn.btn-default.btn-sm{ data: { toggle: 'layer'} }
          Toggle layer
        - unless metadata.blank?
          %button.btn.btn-info.btn-sm{ data: { toggle: 'popover', content: "#{render('layers/metadata', metadata: metadata)}", placement: 'bottom', html: 'true' }, title: 'Layer Information'}
            More Info

      .setting-group.text-center.btn-group.btn-block
        %button.btn.btn-default.btn-sm{ data: { toggle: 'layer'} }
          Toggle layer
        =link_to view_layer_path(layer), class: 'btn btn-danger btn-sm', data: { confirm: 'Are you sure?' }, method: :delete, remote: true do
          Remove Layer

:javascript
$(function () {
  $('[data-toggle="popover"]').popover();
})